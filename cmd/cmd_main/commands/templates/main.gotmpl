/*
Create By Gonyx Framework

Copyright Â© {{.Year}}
Project: {{.ProjectName}}
File: `main.go` --> {{ .Time.Format .TimeFormat }} by {{.CreatorUserName}}
------------------------------
*/
package main

import (
    "fmt"
    "{{.ProjectName}}/commands"
    "github.com/Blocktunium/gonyx/pkg/config"
    "github.com/Blocktunium/gonyx/pkg/logger"
    "time"
)

/*
The main file of the project
*/
func main() {
    fmt.Println("{{.ProjectName}} is Started ...")

    // config module attributes
    baseConfigPath := "."           // the base path for the parameters. by default it's the current directory
    initialConfigMode := "dev"            // it can be override by environment value --> the value can be `dev` and `prod` and whatever you want
    configPrefix := "{{.ProjectName}}"    // this will be used in reading value from environment with this prefix

    err := config.InitializeManager(baseConfigPath, initialConfigMode, configPrefix)
    if err != nil {
        fmt.Println(err)
        return
    }

    // Testing the logger module works properly
    logger.Log(logger.NewLogObject(
        logger.INFO, "main.go", logger.FuncMaintenanceType, time.Now().UTC(), "Logger Module Works Like A Charm ...", nil))

    // Execute the provided command
    commands.Execute()
}
